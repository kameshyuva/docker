version: "2"

services:
  elasticsearch:
    environment:
    - STACK_VER
    build:
      context: elasticsearch
      args:
      - TAG
    image: elasticsearch:${TAG}
    container_name: es
    user: elk
    ports:
    - "5555:9200"
    - "5556:9300"
    volumes:
    - "/home/kamesh/docker/myDockerTryout/k_ops/elasticsearch/es${STACK_VER}/data:/elasticsearch/data"
    - "/home/kamesh/docker/myDockerTryout/k_ops/elasticsearch/es${STACK_VER}/logs:/elasticsearch/logs"
    - "/home/kamesh/docker/myDockerTryout/k_ops/elasticsearch/es${STACK_VER}/config:/elasticsearch/config"
    # build into image, volume mapping permoission runtime issues - see docker file for more info
    command: "/elasticsearch/bin/elasticsearch"
    # run this sysctl command in the host server filesystem (not in container fs) :
    # sysctl -w vm.max_map_count=262144
    # sysctl -w fs.file-max=65536
    # or find where the controls are maintined in the OS ans set accordingly.
    # this is needed for binding the ES instance to localhost's ip ,
    #  when network.host and network.bind_host options are enabled and set to 0.0.0.0 in the elasticsearch.yml.
    ulimits:
      nproc: 65535
      nofile:
        soft: 99999
        hard: 99999

  kibana:
    environment:
    - STACK_VER
    build:
      context: kibana
      args:
      - TAG
      - STACK_VER
    image: kibana:${TAG}
    container_name: kibana
    #user: elk
    ports:
    - "5602:5602"
    depends_on:
    - elasticsearch
    volumes:
    - "/home/kamesh/docker/myDockerTryout/k_ops/kibana/config:/kibana/config"
    command: "/kibana/bin/kibana"

  logstash:
    environment:
    - STACK_VER
    build:
      context: logstash
      args:
      - TAG
    image: logstash:${TAG}
    container_name: logstash
    #user: elk
    ports:
    - "3333:3333"
    - "3334:3334"
    depends_on:
    - elasticsearch
    volumes:
    - "/home/kamesh/docker/myDockerTryout/k_ops/logstash/config:/logstash/config"
    command: "/logstash/bin/logstash -f ${LOGSTASHCONF}"
